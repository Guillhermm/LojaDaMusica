/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.unicamp.ft.lojadamusica.janelas.vendas.cabecalho;

import br.unicamp.ft.lojadamusica.armazenamento.Arquivo;
import br.unicamp.ft.lojadamusica.janelas.clientes.EscolhaDeCliente;
import br.unicamp.ft.lojadamusica.janelas.clientes.ProcDadosCli;
import br.unicamp.ft.lojadamusica.janelas.produtos.ProcDadosPro;
import br.unicamp.ft.lojadamusica.janelas.vendas.cabecalho.Vendas;
import br.unicamp.ft.lojadamusica.janelas.vendas.itens.InclusaoDeItemNaVenda;
import br.unicamp.ft.lojadamusica.janelas.vendas.itens.ItemVenda;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zeh Fiorillo
 */
public class InclusaoDeVenda extends javax.swing.JFrame {
    private Arquivo vArquivo;
    private Arquivo vArqItem;
    private String tipo;
    private JTable grid;
    private int index;
    /**
     * Creates new form IncVendas
     */
    public InclusaoDeVenda() throws IOException, ClassNotFoundException {
        initComponents();
        this.setLocationRelativeTo(null);
        vArqItem = new Arquivo("itemvenda.txt");
        vArqItem.carregarArquivo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        L_Venda = new javax.swing.JLabel();
        TF_Venda = new javax.swing.JTextField();
        L_Cliente = new javax.swing.JLabel();
        TF_Cliente = new javax.swing.JTextField();
        L_Total = new javax.swing.JLabel();
        TF_Total = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        T_Itens = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        M_IncItem = new javax.swing.JMenu();
        M_AltItem = new javax.swing.JMenu();
        M_ExcItem = new javax.swing.JMenu();
        M_Gravar = new javax.swing.JMenu();
        M_Cancelar = new javax.swing.JMenu();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Loja da Musica - Incluir Venda");

        L_Venda.setText("Venda:");

        TF_Venda.setEditable(false);

        L_Cliente.setText("Cliente:");

        TF_Cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TF_ClienteFocusLost(evt);
            }
        });

        L_Total.setText("Total:");

        TF_Total.setEditable(false);
        TF_Total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_TotalActionPerformed(evt);
            }
        });

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        T_Itens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Quantidade", "Valor Unitário"
            }
        ));
        T_Itens.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(T_Itens);

        M_IncItem.setText("Incluir");
        M_IncItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                M_IncItemMouseClicked(evt);
            }
        });
        jMenuBar1.add(M_IncItem);

        M_AltItem.setText("Alterar");
        M_AltItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                M_AltItemMouseClicked(evt);
            }
        });
        jMenuBar1.add(M_AltItem);

        M_ExcItem.setText("Excluir");
        M_ExcItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                M_ExcItemMouseClicked(evt);
            }
        });
        jMenuBar1.add(M_ExcItem);

        M_Gravar.setText("Gravar");
        M_Gravar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                M_GravarMouseClicked(evt);
            }
        });
        jMenuBar1.add(M_Gravar);

        M_Cancelar.setText("Cancelar");
        M_Cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                M_CancelarMouseClicked(evt);
            }
        });
        jMenuBar1.add(M_Cancelar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(L_Total)
                    .addComponent(L_Venda)
                    .addComponent(L_Cliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TF_Total, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(TF_Cliente)
                    .addComponent(TF_Venda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Venda)
                    .addComponent(TF_Venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_Cliente)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Total)
                    .addComponent(TF_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_TotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_TotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_TotalActionPerformed

    private void M_CancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_M_CancelarMouseClicked
        dispose();
    }//GEN-LAST:event_M_CancelarMouseClicked

    private void M_IncItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_M_IncItemMouseClicked
        InclusaoDeItemNaVenda varincitemvenda = new InclusaoDeItemNaVenda();
        varincitemvenda.carregaInfo("I", T_Itens, TF_Total, Integer.valueOf(TF_Venda.getText()), 0);
        varincitemvenda.show();
    }//GEN-LAST:event_M_IncItemMouseClicked

    private void M_ExcItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_M_ExcItemMouseClicked
        int index = T_Itens.getSelectedRow();
        if(index >= 0){
            if(JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o item da venda?") == 0){                
                double item = Double.valueOf(T_Itens.getValueAt(index, 2).toString()) * Double.valueOf(T_Itens.getValueAt(index, 3).toString());
                double total = Double.valueOf(TF_Total.getText()) - item;
                TF_Total.setText(String.valueOf(total));
                DefaultTableModel modelo = (DefaultTableModel)T_Itens.getModel();
                modelo.removeRow(index);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Item!");
            return;
        }
    }//GEN-LAST:event_M_ExcItemMouseClicked

    private void M_AltItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_M_AltItemMouseClicked
        InclusaoDeItemNaVenda varincitemvenda = new InclusaoDeItemNaVenda();        
        varincitemvenda.carregaInfo("A", T_Itens, TF_Total, Integer.valueOf(TF_Venda.getText()), T_Itens.getSelectedRow());
        varincitemvenda.show();
    }//GEN-LAST:event_M_AltItemMouseClicked

    private void M_GravarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_M_GravarMouseClicked
        int tipdoc;
        if(TF_Cliente.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo Cliente é Obrigatório!");
            return;
        }                             
        Vendas vVendas = new Vendas(Integer.valueOf(Integer.valueOf(TF_Venda.getText())), 
                                                    Integer.valueOf(TF_Cliente.getText()), 
                                                    Double.valueOf(TF_Total.getText()));        
        
        String texto;
        if(tipo=="I"){
            vArquivo.salvaLista(tipo, 0, vVendas);
            texto = "Cadastrada";
        }
        else{
            vArquivo.salvaLista(tipo, index, vVendas);
            texto = "Alterada";
        }        
        try {
            vArquivo.gravarLista();
        } catch (IOException ex) {
            Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i, n = T_Itens.getRowCount();
        for (i=0; i<n; i++) {
            if(tipo=="I"){                
                ProcDadosPro vProcDadosPro = new ProcDadosPro();
                try {
                    vProcDadosPro.subEstoque(Integer.valueOf(T_Itens.getValueAt(i, 1).toString()), Integer.valueOf(T_Itens.getValueAt(i, 2).toString()));
                } catch (IOException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            ItemVenda vIteVendas = new ItemVenda(Integer.valueOf(T_Itens.getValueAt(i, 0).toString()),
                                                 Integer.valueOf(TF_Venda.getText()), 
                                                 Integer.valueOf(T_Itens.getValueAt(i, 1).toString()),
                                                 Integer.valueOf(T_Itens.getValueAt(i, 2).toString()),
                                                 Double.valueOf(T_Itens.getValueAt(i, 3).toString()));
            if(tipo=="I")
                vArqItem.salvaLista(tipo, 0, vIteVendas);
            else{
                int qtd_old = vArqItem.salvaAltListaItem(Integer.valueOf(TF_Venda.getText()), 
                                                         Integer.valueOf(T_Itens.getValueAt(i, 0).toString()), 
                                                         vIteVendas, 
                                                         0);
                ProcDadosPro vProcDadosPro = new ProcDadosPro();
                try {
                    vProcDadosPro.subEstoque(Integer.valueOf(T_Itens.getValueAt(i, 1).toString()), 
                                             (Integer.valueOf(T_Itens.getValueAt(i, 2).toString()) - qtd_old));
                } catch (IOException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        try {
            vArqItem.gravarLista();
        } catch (IOException ex) {
            Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ProcDadosVen vProcDadosCli = new ProcDadosVen();
        vProcDadosCli.getLista(grid, vArquivo, 0, 0);
            
        JOptionPane.showMessageDialog(null, "Venda " + texto + " com Sucesso!");
        dispose();        
    }//GEN-LAST:event_M_GravarMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        EscolhaDeCliente varesccli = null;
        try {
            varesccli = new EscolhaDeCliente();
            varesccli.carregaInfo(TF_Cliente);
        } catch (IOException ex) {
            Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        varesccli.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TF_ClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TF_ClienteFocusLost
        if(!TF_Cliente.getText().isEmpty()){
            ProcDadosCli vProcDados = new ProcDadosCli();
            try {
                if(!vProcDados.existeCliente(TF_Cliente.getText())){
                    JOptionPane.showMessageDialog(null, "Cliente Inválido!");
                    TF_Cliente.grabFocus();
                    return;
                }
            } catch (IOException ex) {
                Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }            
    }//GEN-LAST:event_TF_ClienteFocusLost

    public void carregaInfo(Arquivo vArquivo, String tipo, JTable grid, int index){
        this.vArquivo = vArquivo;
        this.tipo = tipo;
        this.grid = grid;
        this.index = index;
        if(tipo == "I"){
            int codigo;
            if(this.vArquivo.lista.size()>0)
                codigo = Integer.valueOf(grid.getValueAt(this.vArquivo.lista.size()-1, 0).toString())+1;
            else
                codigo = 1;
            TF_Venda.setText(String.valueOf(codigo));
            TF_Total.setText("0");
        }
        else
            Alterar();
    }
    
    public void Alterar(){
        int index = this.grid.getSelectedRow();                
        TF_Venda.setText(this.grid.getValueAt(index, 0).toString());
        TF_Cliente.setText(this.grid.getValueAt(index, 1).toString());
        TF_Total.setText(this.grid.getValueAt(index, 2).toString());
        ProcDadosVen vProcDados = new ProcDadosVen();
        vProcDados.getLista(T_Itens, vArqItem, 1, Integer.valueOf(TF_Venda.getText()));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InclusaoDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InclusaoDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InclusaoDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InclusaoDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InclusaoDeVenda().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(InclusaoDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel L_Cliente;
    private javax.swing.JLabel L_Total;
    private javax.swing.JLabel L_Venda;
    private javax.swing.JMenu M_AltItem;
    private javax.swing.JMenu M_Cancelar;
    private javax.swing.JMenu M_ExcItem;
    private javax.swing.JMenu M_Gravar;
    private javax.swing.JMenu M_IncItem;
    private javax.swing.JTextField TF_Cliente;
    private javax.swing.JTextField TF_Total;
    private javax.swing.JTextField TF_Venda;
    private javax.swing.JTable T_Itens;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
